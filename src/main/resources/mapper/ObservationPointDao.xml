<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hdc.dao.ObservationPointDao">
  <resultMap id="BaseResultMap" type="com.hdc.entity.ObservationPoint">
    <id column="observation_point_id" jdbcType="INTEGER" property="observationPointId" />
    <result column="evaluation_index_id" jdbcType="INTEGER" property="evaluationIndexId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="college_id" jdbcType="INTEGER" property="collegeId" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="semester" jdbcType="INTEGER" property="semester" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    observation_point_id, evaluation_index_id, content, college_id, year, semester
  </sql>
  <select id="selectByExample" parameterType="com.hdc.entity.ObservationPointExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from observation_point
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from observation_point
    where observation_point_id = #{observationPointId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from observation_point
    where observation_point_id = #{observationPointId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hdc.entity.ObservationPointExample">
    delete from observation_point
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hdc.entity.ObservationPoint">
    <selectKey keyProperty="observationPointId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into observation_point (evaluation_index_id, content, college_id, 
      year, semester)
    values (#{evaluationIndexId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{collegeId,jdbcType=INTEGER}, 
      #{year,jdbcType=INTEGER}, #{semester,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hdc.entity.ObservationPoint">
    <selectKey keyProperty="observationPointId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into observation_point
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="evaluationIndexId != null">
        evaluation_index_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="collegeId != null">
        college_id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="semester != null">
        semester,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="evaluationIndexId != null">
        #{evaluationIndexId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="semester != null">
        #{semester,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hdc.entity.ObservationPointExample" resultType="java.lang.Long">
    select count(*) from observation_point
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update observation_point
    <set>
      <if test="record.observationPointId != null">
        observation_point_id = #{record.observationPointId,jdbcType=INTEGER},
      </if>
      <if test="record.evaluationIndexId != null">
        evaluation_index_id = #{record.evaluationIndexId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.collegeId != null">
        college_id = #{record.collegeId,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.semester != null">
        semester = #{record.semester,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update observation_point
    set observation_point_id = #{record.observationPointId,jdbcType=INTEGER},
      evaluation_index_id = #{record.evaluationIndexId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      college_id = #{record.collegeId,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      semester = #{record.semester,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hdc.entity.ObservationPoint">
    update observation_point
    <set>
      <if test="evaluationIndexId != null">
        evaluation_index_id = #{evaluationIndexId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="semester != null">
        semester = #{semester,jdbcType=INTEGER},
      </if>
    </set>
    where observation_point_id = #{observationPointId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hdc.entity.ObservationPoint">
    update observation_point
    set evaluation_index_id = #{evaluationIndexId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      college_id = #{collegeId,jdbcType=INTEGER},
      year = #{year,jdbcType=INTEGER},
      semester = #{semester,jdbcType=INTEGER}
    where observation_point_id = #{observationPointId,jdbcType=INTEGER}
  </update>
</mapper>