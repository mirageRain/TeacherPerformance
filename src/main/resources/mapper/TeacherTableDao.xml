<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hdc.dao.TeacherTableDao">
  <resultMap id="BaseResultMap" type="com.hdc.entity.TeacherTable">
    <id column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="teacher_name" jdbcType="VARCHAR" property="teacherName" />
    <result column="teacher_title_id" jdbcType="INTEGER" property="teacherTitleId" />
    <result column="teacher_title_name" jdbcType="VARCHAR" property="teacherTitleName" />
    <result column="college_id" jdbcType="INTEGER" property="collegeId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="enable" jdbcType="TINYINT" property="enable" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="register_ip" jdbcType="VARCHAR" property="registerIp" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="authority_id" jdbcType="INTEGER" property="authorityId" />
    <result column="authorities" jdbcType="VARCHAR" property="authorities" />
    <result column="user_info_id" jdbcType="INTEGER" property="userInfoId" />
    <result column="display_name" jdbcType="VARCHAR" property="displayName" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    teacher_id, users.user_id, teacher_name, teacher.teacher_title_id, name as teacher_title_name, college_id,
    username, password, enable, type, state, register_ip, last_login_ip, last_login_time,
    register_time, authority_id, authorities, user_info_id, display_name, img_url, phone,
    email
  </sql>
  <select id="selectByExample" parameterType="com.hdc.entity.TeacherTableExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    left join user_info
    on
    teacher.user_id =user_info.user_id
    left join teacher_title
    on
    teacher.teacher_title_id =teacher_title.teacher_title_id
    left join authorities
    on
    teacher.user_id =authorities.user_id
    left join users
    on
    teacher.user_id =users.user_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    left join user_info
    on
    teacher.user_id =user_info.user_id
    left join teacher_title
    on
    teacher.teacher_title_id =teacher_title.teacher_title_id
    left join authorities
    on
    teacher.user_id =authorities.user_id
    left join users
    on
    teacher.user_id =users.user_id
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacher_table
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hdc.entity.TeacherTableExample">
    delete from teacher_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hdc.entity.TeacherTable">
    <selectKey keyProperty="teacherId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into teacher_table (user_id, teacher_name, teacher_title_id, 
      teacher_title_name, college_id, username, 
      password, enable, type, 
      state, register_ip, last_login_ip, 
      last_login_time, register_time, authority_id, 
      authorities, user_info_id, display_name, 
      img_url, phone, email
      )
    values (#{userId,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR}, #{teacherTitleId,jdbcType=INTEGER}, 
      #{teacherTitleName,jdbcType=VARCHAR}, #{collegeId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{enable,jdbcType=TINYINT}, #{type,jdbcType=TINYINT}, 
      #{state,jdbcType=TINYINT}, #{registerIp,jdbcType=VARCHAR}, #{lastLoginIp,jdbcType=VARCHAR}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{registerTime,jdbcType=TIMESTAMP}, #{authorityId,jdbcType=INTEGER}, 
      #{authorities,jdbcType=VARCHAR}, #{userInfoId,jdbcType=INTEGER}, #{displayName,jdbcType=VARCHAR}, 
      #{imgUrl,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hdc.entity.TeacherTable">
    <selectKey keyProperty="teacherId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into teacher_table
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="teacherName != null">
        teacher_name,
      </if>
      <if test="teacherTitleId != null">
        teacher_title_id,
      </if>
      <if test="teacherTitleName != null">
        teacher_title_name,
      </if>
      <if test="collegeId != null">
        college_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="enable != null">
        enable,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="registerIp != null">
        register_ip,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="authorityId != null">
        authority_id,
      </if>
      <if test="authorities != null">
        authorities,
      </if>
      <if test="userInfoId != null">
        user_info_id,
      </if>
      <if test="displayName != null">
        display_name,
      </if>
      <if test="imgUrl != null">
        img_url,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null">
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherTitleId != null">
        #{teacherTitleId,jdbcType=INTEGER},
      </if>
      <if test="teacherTitleName != null">
        #{teacherTitleName,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="registerIp != null">
        #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authorityId != null">
        #{authorityId,jdbcType=INTEGER},
      </if>
      <if test="authorities != null">
        #{authorities,jdbcType=VARCHAR},
      </if>
      <if test="userInfoId != null">
        #{userInfoId,jdbcType=INTEGER},
      </if>
      <if test="displayName != null">
        #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hdc.entity.TeacherTableExample" resultType="java.lang.Long">
    select count(*)
    from teacher
    left join user_info
    on
    teacher.user_id =user_info.user_id
    left join teacher_title
    on
    teacher.teacher_title_id =teacher_title.teacher_title_id
    left join authorities
    on
    teacher.user_id =authorities.user_id
    left join users
    on
    teacher.user_id =users.user_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher_table
    <set>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherName != null">
        teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherTitleId != null">
        teacher_title_id = #{record.teacherTitleId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherTitleName != null">
        teacher_title_name = #{record.teacherTitleName,jdbcType=VARCHAR},
      </if>
      <if test="record.collegeId != null">
        college_id = #{record.collegeId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.enable != null">
        enable = #{record.enable,jdbcType=TINYINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.registerIp != null">
        register_ip = #{record.registerIp,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginIp != null">
        last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.registerTime != null">
        register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.authorityId != null">
        authority_id = #{record.authorityId,jdbcType=INTEGER},
      </if>
      <if test="record.authorities != null">
        authorities = #{record.authorities,jdbcType=VARCHAR},
      </if>
      <if test="record.userInfoId != null">
        user_info_id = #{record.userInfoId,jdbcType=INTEGER},
      </if>
      <if test="record.displayName != null">
        display_name = #{record.displayName,jdbcType=VARCHAR},
      </if>
      <if test="record.imgUrl != null">
        img_url = #{record.imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher_table
    set teacher_id = #{record.teacherId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      teacher_title_id = #{record.teacherTitleId,jdbcType=INTEGER},
      teacher_title_name = #{record.teacherTitleName,jdbcType=VARCHAR},
      college_id = #{record.collegeId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      enable = #{record.enable,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT},
      state = #{record.state,jdbcType=TINYINT},
      register_ip = #{record.registerIp,jdbcType=VARCHAR},
      last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      authority_id = #{record.authorityId,jdbcType=INTEGER},
      authorities = #{record.authorities,jdbcType=VARCHAR},
      user_info_id = #{record.userInfoId,jdbcType=INTEGER},
      display_name = #{record.displayName,jdbcType=VARCHAR},
      img_url = #{record.imgUrl,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hdc.entity.TeacherTable">
    update teacher_table
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null">
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherTitleId != null">
        teacher_title_id = #{teacherTitleId,jdbcType=INTEGER},
      </if>
      <if test="teacherTitleName != null">
        teacher_title_name = #{teacherTitleName,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        enable = #{enable,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="registerIp != null">
        register_ip = #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authorityId != null">
        authority_id = #{authorityId,jdbcType=INTEGER},
      </if>
      <if test="authorities != null">
        authorities = #{authorities,jdbcType=VARCHAR},
      </if>
      <if test="userInfoId != null">
        user_info_id = #{userInfoId,jdbcType=INTEGER},
      </if>
      <if test="displayName != null">
        display_name = #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hdc.entity.TeacherTable">
    update teacher_table
    set user_id = #{userId,jdbcType=INTEGER},
      teacher_name = #{teacherName,jdbcType=VARCHAR},
      teacher_title_id = #{teacherTitleId,jdbcType=INTEGER},
      teacher_title_name = #{teacherTitleName,jdbcType=VARCHAR},
      college_id = #{collegeId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      enable = #{enable,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      state = #{state,jdbcType=TINYINT},
      register_ip = #{registerIp,jdbcType=VARCHAR},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      authority_id = #{authorityId,jdbcType=INTEGER},
      authorities = #{authorities,jdbcType=VARCHAR},
      user_info_id = #{userInfoId,jdbcType=INTEGER},
      display_name = #{displayName,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
</mapper>