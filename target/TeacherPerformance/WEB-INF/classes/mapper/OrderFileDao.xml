<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hdc.dao.OrderFileDao">
  <resultMap id="BaseResultMap" type="com.hdc.entity.OrderFile">
    <id column="order_file_id" jdbcType="BIGINT" property="orderFileId" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="save_file_name" jdbcType="VARCHAR" property="saveFileName" />
    <result column="origin_file_name" jdbcType="VARCHAR" property="originFileName" />
    <result column="size" jdbcType="BIGINT" property="size" />
    <result column="file_url" jdbcType="VARCHAR" property="fileUrl" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_file_id, order_id, teacher_id, save_file_name, origin_file_name, size, file_url, 
    create_time
  </sql>
  <select id="selectByExample" parameterType="com.hdc.entity.OrderFileExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_file
    where order_file_id = #{orderFileId,jdbcType=BIGINT}
  </select>
  <select id="selectByOrderId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_file
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_file
    where order_file_id = #{orderFileId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hdc.entity.OrderFileExample">
    delete from order_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hdc.entity.OrderFile">
    <selectKey keyProperty="orderFileId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_file (order_id, teacher_id, save_file_name, 
      origin_file_name, size, file_url, 
      create_time)
    values (#{orderId,jdbcType=BIGINT}, #{teacherId,jdbcType=INTEGER}, #{saveFileName,jdbcType=VARCHAR}, 
      #{originFileName,jdbcType=VARCHAR}, #{size,jdbcType=BIGINT}, #{fileUrl,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hdc.entity.OrderFile">
    <selectKey keyProperty="orderFileId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="saveFileName != null">
        save_file_name,
      </if>
      <if test="originFileName != null">
        origin_file_name,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="fileUrl != null">
        file_url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="saveFileName != null">
        #{saveFileName,jdbcType=VARCHAR},
      </if>
      <if test="originFileName != null">
        #{originFileName,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=BIGINT},
      </if>
      <if test="fileUrl != null">
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hdc.entity.OrderFileExample" resultType="java.lang.Long">
    select count(*) from order_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_file
    <set>
      <if test="record.orderFileId != null">
        order_file_id = #{record.orderFileId,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.saveFileName != null">
        save_file_name = #{record.saveFileName,jdbcType=VARCHAR},
      </if>
      <if test="record.originFileName != null">
        origin_file_name = #{record.originFileName,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null">
        size = #{record.size,jdbcType=BIGINT},
      </if>
      <if test="record.fileUrl != null">
        file_url = #{record.fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_file
    set order_file_id = #{record.orderFileId,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      save_file_name = #{record.saveFileName,jdbcType=VARCHAR},
      origin_file_name = #{record.originFileName,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=BIGINT},
      file_url = #{record.fileUrl,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hdc.entity.OrderFile">
    update order_file
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="saveFileName != null">
        save_file_name = #{saveFileName,jdbcType=VARCHAR},
      </if>
      <if test="originFileName != null">
        origin_file_name = #{originFileName,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=BIGINT},
      </if>
      <if test="fileUrl != null">
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_file_id = #{orderFileId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hdc.entity.OrderFile">
    update order_file
    set order_id = #{orderId,jdbcType=BIGINT},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      save_file_name = #{saveFileName,jdbcType=VARCHAR},
      origin_file_name = #{originFileName,jdbcType=VARCHAR},
      size = #{size,jdbcType=BIGINT},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where order_file_id = #{orderFileId,jdbcType=BIGINT}
  </update>
</mapper>